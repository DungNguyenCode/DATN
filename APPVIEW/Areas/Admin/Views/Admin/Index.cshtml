
@{
    ViewData["Title"] = "Home-Admin";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row gy-4">
        <!-- Chart -->
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex align-items-center justify-content-between">
                        <h5 class="card-title m-0 me-2">Tổng quan</h5>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="transactionID"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false"
                                    style="visibility:hidden">
                                <i class="mdi mdi-dots-vertical mdi-24px"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="transactionID" >
                                <a class="dropdown-item" href="javascript:void(0);">Refresh</a>
                                <a class="dropdown-item" href="javascript:void(0);">Share</a>
                                <a class="dropdown-item" href="javascript:void(0);">Update</a>
                            </div>
                        </div>
                    </div>

                    <p class="mt-3">
                        <span class="fw-medium">Doanh thu </span>
                        <span id="growth" style="font-weight: bold"></span> so với tháng trước!
                    </p>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3 col-6">
                            <div class="d-flex align-items-center">
                                <div class="avatar">
                                    <div class="avatar-initial bg-primary rounded shadow">
                                        <i class="mdi mdi-trending-up mdi-24px"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="small mb-1">Hoá đơn đã thanh toán</div>
                                    <h5 class="mb-0" id="billCount">Loading...</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-6">
                            <div class="d-flex align-items-center">
                                <div class="avatar">
                                    <div class="avatar-initial bg-success rounded shadow">
                                        <i class="mdi mdi-account-outline mdi-24px"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="small mb-1">Số khách hàng</div>
                                    <h5 class="mb-0" id="customerCount">Loading...</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-6">
                            <div class="d-flex align-items-center">
                                <div class="avatar">
                                    <div class="avatar-initial bg-warning rounded shadow">
                                        <i class="mdi mdi-cellphone-link mdi-24px"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="small mb-1">Số lượng sản phẩm đã bán</div>
                                    <h5 class="mb-0" id="products">Loading...</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-6">
                            <div class="d-flex align-items-center">
                                <div class="avatar">
                                    <div class="avatar-initial bg-info rounded shadow">
                                        <i class="mdi mdi-currency-usd mdi-24px"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="small mb-1">Doanh thu</div>
                                    <h5 class="mb-0" id="revenues">Loading...</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-12 col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between">
                        <h3 class="mb-1">Thống kê</h3>
                        <!-- Dropdown for selecting chart type -->
                        <div class="dropdown">
                            <select id="chartTypeDropdown" class="form-control" style="width: 100%">
                                <option value="yearly" selected>Năm nay</option>
                                <option value="weekly" >7 ngày qua</option>
                                <!-- Add other chart types if needed -->
                            </select>
                        </div>
                    </div>
                    <!-- Button to export data to Excel -->
                    <div style="float: right; margin-top:10px;">
                        <button id="exportBtn" class="btn btn-primary" onclick="exportToExcel()">Export to Excel</button>
                    </div>
                </div>
                <div class="card-body">
                    <div id="container">
                        <!-- Canvas for the selected chart type -->
                        <canvas id="selectedChart" height="90"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <!--/ Chart -->

        <!-- Top 5 danh sách sản phẩm -->
        <!-- Thêm ID để dễ dàng truy cập thông qua JavaScript -->
        <div class="col-xl-12 col-md-12">
            <div class="card">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <h5 class="card-title m-0 me-2">Top 5 sản phẩm bán chạy</h5>
                    <div class="dropdown">
                        <button class="btn p-0"
                                type="button"
                                id="saleStatus"
                                data-bs-toggle="dropdown"
                                aria-haspopup="true"
                                aria-expanded="false">
                            <i class="mdi mdi-dots-vertical mdi-24px"></i>
                        </button>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="saleStatus">
                            <a class="dropdown-item" onclick="sortBy('quantity')">Theo số lượng</a>
                            <a class="dropdown-item" onclick="sortBy('earnings')">Theo tổng tiền</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
                        <!-- HTML cho hiển thị dữ liệu -->
                        <table class="table" id="productTable">
                            <thead>
                                <tr>
                                    <th>Ảnh</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Đã bán(chiếc)</th>
                                    <th>Doanh thu</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <!--/ Top 5 danh sách sản phẩm -->

        <!--/Script xử lí -->

        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script>
            let yearlyChart;
            var weeklyChart;
            var trendingProductsChart;
            var currentChart = "yearly";
            console.log("dèalut: " + currentChart);
            // Danh sách sản phẩm
            $(document).ready(
                sortBy('quantity'));

            function sortBy(option) {
                // Gọi API với tùy chọn sắp xếp tương ứng
                var apiUrl = 'https://localhost:7042/api/Chart/SoldProductsByMonth?sortBy=' + option;

                $.ajax({
                    url: apiUrl,
                    method: 'GET',
                    success: function (data) {
                        // Kiểm tra dữ liệu trong console log
                        // console.log(data);

                        // Xử lý dữ liệu và cập nhật HTML
                        var tableBody = $('#productTable tbody');
                        tableBody.empty();

                        // Kiểm tra cấu trúc dữ liệu để xác định tên thuộc tính
                        var productNameKey = 'ProductName';
                        var quantitySoldKey = 'QuantitySold';
                        var totalEarningsKey = 'TotalEarnings';
                        var imageProductKey = 'ProductImage';

                        // Sử dụng $.each để lặp qua mảng dữ liệu
                        $.each(data.labels, function (index, productName) {
                            var quantitySold = data.quantities[index];
                            var totalEarnings = data.earnings[index];
                            var imageProduct = data.images[index];

                            // Hiển thị thông tin sản phẩm trong bảng
                            var row = '<tr>' +
                                '<td style="width: 150px; height: 150px; overflow: hidden;">' +
                                '<img src="/images/' + imageProduct.trim() + '" style="width: 100%; height: auto;  object-position: 0 0;" alt="Product Image">' +
                                '</td>' +
                                '<td>' + productName + '</td>' +
                                '<td>' + quantitySold + '</td>' +
                                '<td>' + parseFloat(totalEarnings).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) + '</td>' +
                                '</tr>';
                            tableBody.append(row);
                        });
                    },
                    error: function (error) {
                        // Xử lý lỗi nếu có
                        console.error('Error fetching data:', error);
                    }
                });
            }

            $(document).ready(function () {
                // growth

                function growthToLastMonth(data) {
                    const gr = document.getElementById('growth');
                    const lastindex = data.values.length - 1;

                    if (lastindex >= 1) {
                        const growthRate = ((data.values[lastindex] / data.values[lastindex - 1]) - 1) * 100;
                        const roundedGrowth = Math.round(growthRate * 100) / 100; // Làm tròn 2 chữ số sau dấu phẩy

                        if (roundedGrowth < 0) {
                            gr.innerHTML = ` giảm ${-roundedGrowth}% `;
                            gr.style.color = 'red'; // Màu đỏ
                        } else if (roundedGrowth > 0) {
                            gr.innerHTML = `tăng ${roundedGrowth}% `;
                            gr.style.color = 'green'; // Màu xanh lá
                        } else {
                            gr.innerHTML = 'giữ nguyên'; // Giữ nguyên giá trị là '0%'
                            gr.style.color = 'orange'; // Màu vàng
                        }

                    } else if (lastindex === 0) {
                        const growthRate = data.values[lastindex] * 100;
                        const roundedGrowth = Math.round(growthRate * 100) / 100;

                        if (roundedGrowth < 0) {
                            gr.innerHTML = `giảm ${-roundedGrowth}% `;
                            gr.style.color = 'red'; // Màu đỏ
                        } else if (roundedGrowth > 0) {
                            gr.innerHTML = `tăng ${roundedGrowth}% `;
                            gr.style.color = 'green'; // Màu xanh lá
                        } else {
                            gr.innerHTML = 'giữ nguyên'; // Giữ nguyên giá trị là '0%'
                            gr.style.color = 'orange'; // Màu vàng
                        }

                    } else {
                        gr.innerHTML = 'giữ nguyên'; // Giữ nguyên giá trị là '0%'
                        gr.style.color = 'orange'; // Màu vàng
                    }
                }

                function DrawChartForYear() {
                    $.ajax({
                        url: 'https://localhost:7042/api/Chart/2023',
                        method: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            if (data && data.values && data.label) {
                                growthToLastMonth(data);
                            } else {
                                console.error('Invalid data received from API');
                            }
                        },
                        error: function (error) {
                            console.error('Error fetching data:', error);
                        }
                    });
                }
                // Mặc định chọn năm hiện tại
                var currentYear = new Date().getFullYear();
                DrawChartForYear(currentYear);
                GetCustomer();
                GetProducts();
                GetRevenues();
                GetBills();
                var currentDay = new Date();

                // Sự kiện thay đổi của dropdown
                $('#chartTypeDropdown').on('change', function () {
                    var selectedChartType = $(this).val();
                   
                    // Hủy bỏ biểu đồ hiện tại nếu có
                    if (yearlyChart) {
                        yearlyChart.destroy();
                    }

                    // Gọi hàm vẽ biểu đồ tương ứng dựa trên loại đã chọn
                    if (selectedChartType === 'yearly') {
                        var selectedYear = $('#select').val();
                        currentChart = "yearly";
                        console.log(currentChart);
                        DrawChartForYear(selectedYear);
                    } else if (selectedChartType === 'weekly') {
                        currentChart = "weekly";
                        console.log(currentChart);
                        DrawLast7DayChart();
                    }

                });

                // Hàm vẽ biểu đồ với dữ liệu từ API
                function DrawChart(data) {

                    // Hủy bỏ biểu đồ hiện tại nếu có
                    if (weeklyChart) {
                        weeklyChart.destroy();
                    }
                    const ctx = document.getElementById('selectedChart').getContext('2d');
                    // Mảng chứa giá trị của 12 tháng
                    var monthsData = new Array(12).fill(0);

                    // Ánh xạ dữ liệu từ API vào mảng đầy đủ của 12 tháng
                    data.values.forEach(function (value, index) {
                        // Tháng được trả về từ API là 1-indexed, chuyển về 0-indexed
                        var a = data.labels[index] - 1;

                        monthsData[a] = value;
                    });

                    yearlyChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                            datasets: [{
                                label: data.label,
                                data: monthsData,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
                // Hàm gọi API và vẽ biểu đồ cho năm được chọn
                function DrawChartForYear() {
                    $.ajax({
                        url: 'https://localhost:7042/api/Chart/2023',
                        method: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            if (data && data.values && data.label) {
                                DrawChart(data);
                                growthToLastMonth(data);
                            } else {
                                console.error('Invalid data received from API');
                            }
                        },
                        error: function (error) {
                            console.error('Error fetching data:', error);
                        }
                    });
                }
                function Last7DayChart(data) {
                    // var currentDay = new Date('12/7/2023');
                    var currentDay = new Date();

                    const ctx = document.getElementById('selectedChart').getContext('2d');
                    // Hủy bỏ biểu đồ hiện tại nếu có
                    if (yearlyChart) {
                        yearlyChart.destroy();
                    }

                    // Mảng chứa giá trị của 7 ngày gần nhất
                    var dayData = new Array(7).fill(0);

                    // Mảng chứa nhãn của 7 ngày gần nhất với định dạng ngày/tháng
                    var labels = [];
                    for (var i = 6; i >= 0; i--) {
                        var date = new Date(currentDay);
                        date.setDate(currentDay.getDate() - i);

                        var day = date.getDate();
                        var month = date.getMonth() + 1;

                        // Định dạng ngày và tháng thành "dd/mm" và thêm vào mảng labels
                        var formattedDate = `${day < 10 ? '0' : ''}${day}/${month < 10 ? '0' : ''}${month}`;
                        labels.push(formattedDate);
                    }

                    var z = labels[0].slice(0, 2);
                    // console.log('Begin Date:' + z);
                    var dayIndex = 0;
                    var biengancuaIndex = 0;
                    // Ánh xạ dữ liệu từ API vào mảng của 7 ngày gần nhất
                    data.values.forEach(
                        function (value, index) {
                            // 25/11
                            var day = data.labels[index]; // 11/25/2023 hoặc 1/12/2023 hoặc 12/01/2023
                            var daydate;

                            // Kiểm tra định dạng dd/mm/yyyy
                            if (day.length === 10) {
                                daydate = day.slice(3, 5); // Lấy ngày từ vị trí 3 đến 4 trong chuỗi
                            }
                            // Kiểm tra định dạng d/mm/yyyy
                            else if (day.length === 9 && day.indexOf("/") === 1) {
                                daydate = day.slice(2, 3); // Lấy ngày từ vị trí 2 trong chuỗi
                            }
                            // Kiểm tra định dạng dd/m/yyyy
                            else if (day.length === 9 && day.indexOf("/") === 2) {
                                daydate = day.slice(3, 4); // Lấy ngày từ vị trí 3 trong chuỗi
                            }
                            // Kiểm tra định dạng d/m/yyyy
                            else if (day.length === 8 && day.indexOf("/") === 1) {
                                daydate = day.slice(2, 3); // Lấy ngày từ vị trí 2 trong chuỗi
                            }
                            // Kiểm tra định dạng dd/m/yyyy hoặc d/mm/yyyy
                            else if (day.length === 8 && day.indexOf("/") === 2) {
                                daydate = day.slice(3, 4); // Lấy ngày từ vị trí 3 trong chuỗi
                            }

                            // console.log("Ngày là: " + daydate);

                            dayIndex = daydate - z;
                            if (dayIndex < 0) {
                                dayData[biengancuaIndex] = value;
                                biengancuaIndex += 1;
                                // console.log("Bien: " + biengancuaIndex);
                            }

                            else {
                                dayData[dayIndex] = value;
                                biengancuaIndex = dayIndex + 1;
                                // console.log("Bien: " + dayIndex);
                            }
                        }

                    );
                    weeklyChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: data.label,
                                data: dayData,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
                // Hàm vẽ biểu đồ hàng tuần
                function DrawLast7DayChart() {
                    $.ajax({
                        url: 'https://localhost:7042/api/Chart/weekly',
                        method: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            if (data && data.labels && data.values && data.label) {
                                Last7DayChart(data);
                            } else {
                                console.error('Invalid data received from API');
                            }
                        },
                        error: function (error) {
                            console.error('Error fetching data:', error);
                        }
                    });
                }
                function GetCustomer() {
                    // Gọi API sử dụng Fetch API
                    fetch('https://localhost:7042/api/Chart/Customers/Count')
                        .then(response => response.json())
                        .then(data => {
                            var customerCountElement = document.getElementById('customerCount');

                            // Kiểm tra xem phần tử có tồn tại không
                            if (customerCountElement) {
                                customerCountElement.innerText = data.count;
                            }
                        })
                        .catch(error => console.error('Error fetching customer data:', error));
                };
                function GetProducts() {
                    fetch('https://localhost:7042/api/Chart/Products/Count')
                        .then(response => response.json())
                        .then(data => {
                            var productsCountElement = document.getElementById('products');

                            // Kiểm tra xem phần tử có tồn tại không
                            if (productsCountElement) {
                                productsCountElement.innerText = data.totalQuantity;
                            }
                        })
                        .catch(error => console.error('Error fetching customer data:', error));
                };
                function GetRevenues() {
                    fetch('https://localhost:7042/api/Chart/Revenues/Count')
                        .then(response => response.json())
                        .then(data => {
                            var totalRevenue = document.getElementById('revenues');

                            // Kiểm tra xem phần tử có tồn tại không
                            if (totalRevenue) {
                                totalRevenue.innerText = data.totalRevenue;
                            }
                        })
                        .catch(error => console.error('Error fetching customer data:', error));
                };
                function GetBills() {
                    fetch('https://localhost:7042/api/Chart/CountBills/Count')
                        .then(response => response.json())
                        .then(data => {
                            var totalBill = document.getElementById('billCount');

                            // Kiểm tra xem phần tử có tồn tại không
                            if (totalBill) {
                                totalBill.innerText = data.countBill;
                            }
                        })
                        .catch(error => console.error('Error fetching customer data:', error));
                };
            });
            function exportToExcel() {
                if (confirm("Tải về file Excel?")) {
                    var last = currentChart;
                    window.location.href = "https://localhost:7042/api/Chart/ExportDataToExcel/" + last;
                }
            }
        </script>
    </div>

</div>


