@model X.PagedList.IPagedList<APPDATA.Models.ProductDetail>
@using X.PagedList.Web.Common
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "GetList";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    int stt = 0;
}




<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Product Details</h5>
    </div>
    <div class="card-body">
        <a class="btn btn-success waves-effect waves-light" asp-action="Create">
            <span class="mdi mdi-plus-thick">Create new</span>
        </a>
      <form asp-controller="productdetail" asp-action="getlist" class="row contact_form" method="post">
    <div class="col-md-5 form-group" style="margin-right:50px">
        <input type="text" class="form-control" name="tk" placeholder="Nhập tên sản phẩm để tìm kiếm">
        <button type="submit" style="background-color:brown ; color:black">Search</button>
    </div>
      @*<div class="input-group mb-3">
            <input type="text" name="tk" class="form-control" placeholder="Tìm kiếm" aria-label="Tìm kiếm" aria-describedby="button-addon2">
            <button class="btn btn-outline-secondary" type="submit" id="button-addon2"><i class="fas fa-search"></i>Tìm kiếm</button>
        </div>*@
    </form>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Name</th>
                        <th>IMG</th>
                        <th>Category</th>
                        <th>Size</th>
                        <th>Material</th>
                        <th>Color</th>
                        <th>Supplier</th>
                        <th>Quantity</th>
                        <th> Price</th>
                        <th> Status</th>
                        <th>Create_date </th>
                        <th> Update_date </th>
@*                        <th>
                            Create_by
                        </th>
                        <th>
                            Update_by
                        </th>*@


                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @(
                            stt += 1
                            )
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @foreach (var obj in ViewBag.Image)
                                    {
                                        if (item.Id == obj.IdProductdetail)
                                        {
                                            <img src="~/images/@obj.Name" alt="Fjords" width="90px" height="90px">
                                            break;
                                        }
                                    }
                                </td>
                                <td>
                                    @foreach (var obj in ViewBag.Category)
                                    {
                                        if (item.Id_Category == obj.Id)
                                        {
                                            <p>
                                                @obj.Name
                                            </p>
                                        }
                                    }
                                </td>
                                <td>
                                    @foreach (var obj in ViewBag.Size)
                                    {
                                        if (item.Id_Size == obj.Id)
                                        {
                                            <p>
                                                @obj.Name
                                            </p>
                                        }
                                    }
                                </td>

                                <td>
                                    @foreach (var obj in ViewBag.Material)
                                    {
                                        if (item.Id_Material == obj.Id)
                                        {
                                            <p>
                                                @obj.Name
                                            </p>
                                        }
                                    }
                                </td>
                                <td>
                                    @foreach (var obj in ViewBag.Color)
                                    {
                                        if (item.Id_Color == obj.Id)
                                        {
                                            <p>
                                                @obj.Name
                                            </p>
                                        }
                                    }
                                </td>
                                <td>
                                    @foreach (var obj in ViewBag.Supplier)
                                    {
                                        if (item.Id_supplier == obj.Id)
                                        {
                                            <p>
                                                @obj.Name
                                            </p>
                                        }
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Quantity)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>

                                <td>
                                    @{
                                        DateTime createDate = item.Create_date;
                                        string formattedDate = createDate != DateTime.MinValue
                                        ? createDate.ToString("dd/MM/yyyy")
                                        : "Not changed";
                                    }
                                    @formattedDate
                                </td>
                                <td>
                                    @{
                                        DateTime updatedDate = item.Update_date;
                                        string formattedUpdateDate = updatedDate != DateTime.MinValue
                                        ? updatedDate.ToString("dd/MM/yyyy")
                                        : "Not changed";
                                    }
                                    @formattedUpdateDate
                                </td>
@*                                <td>
                                    @Html.DisplayFor(modelItem => item.Create_by)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Update_by)
                                </td>*@



                                <td>

                                    <a href="@Url.Action("Edit", new { id = item.Id  })" class="btn btn-info waves-effect waves-light" >
                                        <span class="mdi mdi-pencil-box-outline"></span>Edit
                                    </a> <a href="@Url.Action( "Details","Home", new { id = item.Id  })" class="btn btn-warning waves-effect waves-light" >
                                        <span class="mdi mdi-pencil-box-outline"></span>Details 
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = item.Id  })" class="btn btn-danger waves-effect waves-light">
                                        <span class="mdi mdi-delete"></span>Delete
                                    </a>
                                </td>
                            </tr>

                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" class="text-center">No Data.</td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>

</div>
@*<div class="col-12">
    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item disabled"><a class="page-link" href="#">Previous</span></a></li>
            @for (int i = 1; i <= Model.PagingInfo.TotalPages; i++)
            {
                <li class="page-item"><a class="page-link" href="/ProductDetalis/GetList?ProductPage=@i">@i</a></li>

            }
            <li class="page-item"><a class="page-link" href="">Next</a></li>
        </ul>
    </nav>
</div>*@
<div>
    @Html.PagedListPager(Model, page => Url.Action("GetList", new {page = page, sort=ViewBag.sort}), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item"},
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3", "size" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 8,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
</div>
