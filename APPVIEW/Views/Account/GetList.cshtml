@using APPDATA.Models;
@model IEnumerable<APPDATA.Models.Account>

@{
    ViewData["Title"] = "Admin-Account";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    int stt = 0;

}
@functions
{
    private string GetRoleName(Guid? roleId)
    {
        var roles = ViewBag.Roles as List<Role>;
        var role = roles.FirstOrDefault(c => c.id == roleId);
        if (role != null)
        {
            return role.name;
        }
        return "No Data";
    }
}

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Account</h5>
    </div>
    <div class="card-body">
        <a class="btn btn-success mb-3" asp-controller="Account" asp-action="Create">Create New</a>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Name</th>
                        <th>Email Address</th>
                        <th>Role</th>
                        <th>Avatar</th>
                        <th>Create Date</th>
                        <th>Update Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@(stt += 1)</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                <td>@GetRoleName(item.IdRole)</td>
                                <td>
                                    <img src="~/UserImage/@item.Avatar" alt="Avatar" style="width: 50px; height: 50px; border-radius: 50%; object-fit: cover;" />
                                </td>
                                <td>
                                    @{
                                        DateTime createDate = item.Create_date;
                                        string formattedDate = createDate != DateTime.MinValue
                                        ? createDate.ToString("dd/MM/yyyy")
                                        : "Not changed";
                                    }
                                    @formattedDate
                                </td>
                                <td>
                                    @{
                                        DateTime updatedDate = item.Update_date;
                                        string formattedUpdateDate = updatedDate != DateTime.MinValue
                                        ? updatedDate.ToString("dd/MM/yyyy")
                                        : "Not changed";
                                    }
                                    @formattedUpdateDate
                                </td>
                                <td>
                                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-info">
                                        <span class="mdi mdi-pencil-box-outline"></span>Edit
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" class="text-center">No Data.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@* <td><span class="badge rounded-pill bg-label-primary me-1">Active</span></td> *@
